url: https://retroharmonize.dataobservatory.eu

template:
  bootstrap: 5

home:
  title: Reproducible survey harmonization

authors:
  Daniel Antal:
    href: https://reprex.nl/authors/daniel_antal/
  Reprex:
    href: https://reprex.nl/
    html: <img src="https://reprex.nl/authors/admin/avatar_hud66277e7f64fbf44513e7a4881e2a94f_35557_270x270_fill_lanczos_center_2.png"
      height="24" />

intro:
  - title: "Get Started"

articles:
  - title: "Conceptual"
    desc: >
     We try to bulid a correspondance with the DDI and SDMX standards, the exiting
     literature and our own practice.
    contents:
      - concept
      - codelist
      - crosswalk
      - harmonize_labels
  - title: "Tutorials"
    desc: >
      An overview of the harmonization workflow and support for
      **mapping concepts**, creating a **crosswalk scheme** of the harmonization,
      carrying out variable name, numerical code, labeling and type setting
      harmonization.
    contents:
      - survey_harmonization
      - metadata
      - documentation
      - retroharmonize
  - title: "Use cases"
    desc: >
      Real-life examples with thee major harmonized survey program's
      data.
    contents:
      - afrobarometer
  - title: "Under the hood"
    desc: >
      The s3 class inheritted from *labelled* and *haven*
    contents:
      - labelled_spss_survey

reference:
  - title: "Importing"
    desc: >
      Survey data, i.e., data derived from questionnaires or systematic data collection, such as inspecting objects in nature, recording prices at shops are usually stored databases, and converted to complex files retaining at least coding, labelling metadata together with the data. This must be imported to R so that the appropriate
      harmonization tasks can be carried out with the appropriate R types.
    contents:
      - read_surveys
      - read_survey
      - read_rds
      - read_spss
      - read_dta
      - read_csv
      - pull_survey
  - title: "Harmonizing concepts with metadata"
    desc: >
     After importing data with some **descriptive metadata** such as **numerical coding** and **labelling**,
     we need to create a map of the information that is in our R session to prepare a harmonization
     plan. We must find information related to sufficiently similar concepts that can be
     harmonized to be successfully joined into a single variable, and eventually a table of similar
     variables must be joined.
    contents:
      - metadata_create
      - metadata_survey_create
      - retroharmonize
  - title: "Codebooks"
    desc: >
     The new functions will follow the DDI and SDMX terminology.
     See vignette [Harmonizing Concepts, Questions, and Variables](https://retroharmonize.dataobservatory.eu/articles/concept.html)
    contents:
      - codebook_create
  - title: "Harmonize variable names"
    desc: >
     Before joining variables containing responses about the same concept, make
     sure that they have **identical names** in the re-processed surveys.
     See the vignette [Working with a Crosswalk Table](https://retroharmonize.dataobservatory.eu/articles/crosswalk.html) for examples and further clarification.
    contents:
       - harmonize_var_names
       - var_label_normalize
       - harmonize_survey_variables
  - title: "Codelists"
    desc: >
     The new functions will follow the DDI and SDMX terminology. The old terminology uses
     variable harmonization (below).
          See vignette [Value Labels and Codelists](https://retroharmonize.dataobservatory.eu/articles/codelist.html)
    contents:
      - codelist_create
  - title: "Harmonize numerical codes and labels"
    desc: >
     To merge variables from different surveys into a single variable, you must make sure that
     the numerical codes and labels, for example *0='no'* and *1='yes'* are processed identically.
     See the vignette [Harmonize Value Labels](https://retroharmonize.dataobservatory.eu/articles/harmonize_labels.html) for examples and further clarification.
    contents:
        - collect_val_labels
        - harmonize_values
        - harmonize_survey_values
        - merge_surveys
  - title: "Harmonize missing and special cases"
    desc: >
      Some variable codes have a special meaning, such as a various labels of
      **missing values** which need to be converted differently to numeric, factor or
      character representation.
      See the vignette [Harmonize Value Labels](https://retroharmonize.dataobservatory.eu/articles/harmonize_labels.html) for examples and further clarification.
    contents:
        - collect_na_labels
        - na_range_to_values
        - harmonize_na_values
  - title: "Crosswalk"
    desc: >
     Laying out the harmonization **crosswalk scheme** (unifying variable names, codes,
     labels.) See the vignette [Working with a Crosswalk Table](https://retroharmonize.dataobservatory.eu/articles/crosswalk.html) for examples and further clarification.
    contents:
      - crosswalk_table_create
      - crosswalk
  - title: "Subsetting"
    desc: >
     Remove variables that **cannot be harmonized** in your workflow either in
     memory (faster for smaller tasks) or sequentially from files.
     See the vignette [Working with a Crosswalk Table](https://retroharmonize.dataobservatory.eu/articles/crosswalk.html) for examples and further clarification.
    contents:
       - subset_surveys
  - title: "Documentation functions"
    desc: >
       These functionality requires a thorough review.
    contents:
        - document_survey_item
        - document_surveys
        - create_codebook
  - title: "Type conversion"
    desc: >
      Consistently treat labels, missing value ranges, missing value labels imported
      from SPSS, STATA or other source to use R language statistical functions, which
      mainly work with the base class of **numeric** or **factor**. For data visualization, the
      base class **character** may be preferred.
      See vignette [The labelled_spss_survey class](https://retroharmonize.dataobservatory.eu/articles/labelled_spss_survey.html)
      for further information.
    contents:
        - survey
        - is.survey_df
        - labelled_spss_survey
        - as_labelled_spss_survey
        - concatenate
        - as_factor
        - as_numeric
        - as_character

